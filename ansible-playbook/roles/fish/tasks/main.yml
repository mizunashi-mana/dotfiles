---
- name: Install fish
  community.general.homebrew:
    name: fish
    state: present

- name: Directory of fish config is available
  ansible.builtin.file:
    path: '{{ ansible_env.HOME }}/.config/fish'
    state: directory
    recurse: true

- name: Directory of fish functions is available
  ansible.builtin.file:
    path: '{{ ansible_env.HOME }}/.config/fish/functions'
    state: directory

- name: Copy fish config
  ansible.builtin.copy:
    src: home/user/.config/fish/config.fish
    dest: '{{ ansible_env.HOME }}/.config/fish/config.fish'

- name: Copy fish_prompt function config
  ansible.builtin.copy:
    src: home/user/.config/fish/functions/fish_prompt.fish
    dest: '{{ ansible_env.HOME }}/.config/fish/functions/fish_prompt.fish'

- name: Copy fish_right_prompt function config
  ansible.builtin.copy:
    src: home/user/.config/fish/functions/fish_right_prompt.fish
    dest: '{{ ansible_env.HOME }}/.config/fish/functions/fish_right_prompt.fish'

- name: Copy fish_right_prompt function config
  ansible.builtin.copy:
    src: home/user/.config/fish/functions/fish_right_prompt.fish
    dest: '{{ ansible_env.HOME }}/.config/fish/functions/fish_right_prompt.fish'

- name: Get fish path
  ansible.builtin.command:
    cmd: which fish
  register: fish_path_command_output
  changed_when: false

- name: fish is available in shells
  ansible.builtin.lineinfile:
    path: /etc/shells
    line: '{{ fish_path_command_output.stdout }}'
  become: true

- name: Set default shell to fish
  ansible.builtin.user:
    name: '{{ ansible_env.USER }}'
    shell: '{{ fish_path_command_output.stdout }}'
  failed_when: false
  register: fish_result_of_default_shell_settings

- name: Set default shell to fish (fallback)
  ansible.builtin.command:
    cmd: 'chsh -s {{ fish_path_command_output.stdout }} {{ ansible_env.USER }}'
  when: |
    fish_result_of_default_shell_settings.rc is defined
    and fish_result_of_default_shell_settings.rc != 0
  become: true
